.TH "ChEngn" 3 "Wed Apr 27 2011" "Version 0.0.1" "libchessengine" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ChEngn \- 
.PP
Contains all typedefs, constants, classes defined in.  

.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBEngine\fP"
.br
.ti -1c
.RI "class \fBEnumerator\fP"
.br
.RI "\fIEnumerate possibile moves. \fP"
.ti -1c
.RI "class \fBException\fP"
.br
.ti -1c
.RI "class \fBPiece\fP"
.br
.RI "\fIChess piece. \fP"
.ti -1c
.RI "class \fBTable\fP"
.br
.RI "\fIChess board. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBChEngn::Table\fP \fBVirtualTable\fP"
.br
.ti -1c
.RI "typedef int \fBERROR_CODE\fP"
.br
.ti -1c
.RI "typedef std::string \fBERROR_MSG\fP"
.br
.RI "\fIERROR_MSG Empty typedef for nice code :) \fP"
.ti -1c
.RI "typedef const unsigned char \fBpiece_type\fP"
.br
.RI "\fI\fBPiece\fP type is just a unsigned char. \fP"
.ti -1c
.RI "typedef const unsigned char \fBpiece_color\fP"
.br
.RI "\fI\fBPiece\fP color is just a unsigned char. \fP"
.ti -1c
.RI "typedef const unsigned char \fBpiece_movement_flag\fP"
.br
.RI "\fI\fBPiece\fP movement flag is just a bit in unsigned char. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBEnumerationSide\fP { \fBUndefinedSide\fP =  0, \fBWhiteSide\fP, \fBBlackSide\fP }"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const int \fBOK_I\fP = 0"
.br
.RI "\fIUseless code, used as deafult value, for example in copy-constructor. \fP"
.ti -1c
.RI "const int \fBCAN_T_FIND_SOURCE_PIECE_I\fP = -1"
.br
.RI "\fIUsed when \fBChEngn::Engine\fP tryes to make ply, but can't find piece which has been moved. \fP"
.ti -1c
.RI "const int \fBCAN_T_FIND_DESTINATION_PIECE_I\fP = -2"
.br
.RI "\fIUsed when \fBChEngn::Engine\fP tryes to make ply, but can't find destination piece. \fP"
.ti -1c
.RI "const int \fBCAN_T_MAKE_CASTLING_I\fP = -3"
.br
.RI "\fIUsed when castling can't be do. Chech chess rules for cases when this exception can be used. \fP"
.ti -1c
.RI "const int \fBPLY_S_POINTER_IS_NULL_I\fP = -4"
.br
.RI "\fIUsed when ply pointer given to ChEngn::Engine::make<PieceType>Ply is equal to 0. \fP"
.ti -1c
.RI "const int \fBOUT_OF_RANGE_I\fP = -5"
.br
.RI "\fIUsed when uses tryes to get access to whong piece from \fBChEngn::Table\fP. \fP"
.ti -1c
.RI "const std::string \fBOK_S\fP = 'Everything is ok'"
.br
.RI "\fIUseles message. \fP"
.ti -1c
.RI "const std::string \fBCAN_T_FIND_SOURCE_PIECE_S\fP = 'Can't find source piece'"
.br
.RI "\fIUses when \fBChEngn::Engine\fP can't find piece which can make give move. \fP"
.ti -1c
.RI "const std::string \fBCAN_T_FIND_DESTINATION_PIECE_S\fP = 'Can't find destination piece'"
.br
.RI "\fIUses when \fBChEngn::Engine\fP can't find piece where move destination. \fP"
.ti -1c
.RI "const std::string \fBPLY_S_POINTER_IS_NULL_S\fP = 'Given Ply's pointer is == 0'"
.br
.RI "\fIUsed when ply pointer given to ChEngn::Engine::make<PieceType>Ply is equal to 0. \fP"
.ti -1c
.RI "const std::string \fBOUT_OF_RANGE_S\fP = 'Trying to acces bad position in table'"
.br
.RI "\fIUsed when uses tryes to get access to whong piece from \fBChEngn::Table\fP. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBunknown\fP = 63"
.br
.RI "\fIUses to present unknown type piece 63 = [00011111]. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBpawn\fP = 1 << 0"
.br
.RI "\fIUses to present pawns. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBknight\fP = 1 << 1"
.br
.RI "\fIUses to present knights. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBbishop\fP = 1 << 2"
.br
.RI "\fIUses to present bishops. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBrook\fP = 1 << 3"
.br
.RI "\fIUses to present rooks. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBqueen\fP = 1 << 4"
.br
.RI "\fIUses to present queens. \fP"
.ti -1c
.RI "\fBpiece_type\fP \fBking\fP = 1 << 5"
.br
.RI "\fIUses to present kings. \fP"
.ti -1c
.RI "\fBpiece_color\fP \fBwhite\fP = 1 << 6"
.br
.RI "\fIUses to set flag if piece is white ( else flag is not set) \fP"
.ti -1c
.RI "\fBpiece_color\fP \fBblack\fP = 0 << 6"
.br
.RI "\fIUses to unset flag if piece is black. \fP"
.ti -1c
.RI "\fBpiece_movement_flag\fP \fBmoved\fP = 1 << 7"
.br
.RI "\fIUses to set flag is piece has been moved. \fP"
.ti -1c
.RI "const unsigned int \fBdefault_table_height\fP = 8"
.br
.RI "\fIStandart table height. \fP"
.ti -1c
.RI "const unsigned int \fBdefault_table_width\fP = 8"
.br
.RI "\fIStandart table width. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Contains all typedefs, constants, classes defined in. 

contains all classes, structs, constants to work whis library.
.PP
Contains all typedefs, constans, classes defined in libchessengine 
.SH "Typedef Documentation"
.PP 
.SS "typedef int \fBChEngn::ERROR_CODE\fP"Used when uses tryes to get access to whong piece from \fBChEngn::Table\fP const int OUT_OF_RANGE= -5; ERROR_CODE Empty typedef for nice code :) 
.SS "typedef \fBChEngn::Table\fP \fBChEngn::VirtualTable\fP"Every library user will use 'Virtual tables'. E.g. you get current table state, and then you can make changes, but all your changes will not change real table. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBChEngn::EnumerationSide\fP"
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIUndefinedSide \fP\fP
Default value. 
.TP
\fB\fIWhiteSide \fP\fP
White player's side. 
.TP
\fB\fIBlackSide \fP\fP
Black player's side. 
.SH "Author"
.PP 
Generated automatically by Doxygen for libchessengine from the source code.
